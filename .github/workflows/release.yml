name: Go Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test ./...

  build-and-release:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.24'

      - name: Build binaries
        run: make build
        
      - name: Extract release notes
        id: extract_release_notes
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            VERSION=${TAG#v}
            
            # Check if version exists in changelog
            if grep -q "## \[$VERSION\]" CHANGELOG.md; then
              # Extract section between this version header and the next section
              NOTES=$(awk "/## \\[$VERSION\\]/,/## \\[|---/" CHANGELOG.md | grep -v "^## \\[" | grep -v "^---" | sed '/^$/d' | sed 's/^/  /')
              
              # Handle empty result
              if [ -z "$NOTES" ]; then
                NOTES="Release $TAG"
              fi
              
              echo "release_notes<<EOF" >> $GITHUB_OUTPUT
              echo "$NOTES" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "release_notes=Release $TAG" >> $GITHUB_OUTPUT
              echo "No entry found for version $VERSION in CHANGELOG.md"
            fi
          fi
        if: startsWith(github.ref, 'refs/tags/')

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: build/*
          body: ${{ steps.extract_release_notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')